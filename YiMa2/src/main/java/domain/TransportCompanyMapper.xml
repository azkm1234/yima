<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="domain.TransportCompanyMapper">
  <resultMap id="BaseResultMap" type="model.TransportCompany">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="contacts" jdbcType="VARCHAR" property="contacts" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, contacts, title, phone, description
  </sql>
  <select id="selectBySize" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transportcompany
    order by id desc
  </select>
  
  <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from transportcompany
    where username=#{username}
  </select>
  <delete id="deleteByUserName" parameterType="java.lang.String">
    delete from transportcompany
    where username = #{username,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="model.TransportCompany">
    insert into transportcompany (id, username, contacts, 
      title, phone, description
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{contacts,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.TransportCompany">
    insert into transportcompany
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="contacts != null">
        contacts,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.TransportCompany">
    update transportcompany
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.TransportCompany">
    update transportcompany
    set username = #{username,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>