<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="domain.HorseOnSaleMapper">
  <resultMap id="BaseResultMap" type="model.HorseOnSale">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="time" jdbcType="DATE" property="time" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="horsetype" jdbcType="VARCHAR" property="horsetype" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="color" jdbcType="VARCHAR" property="color" />
    <result column="speciality" jdbcType="VARCHAR" property="speciality" />
    <result column="parents" jdbcType="VARCHAR" property="parents" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="height" jdbcType="INTEGER" property="height" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, time, title, sex, horsetype, address, color, speciality, parents, description, 
    picture, age, height
  </sql>
  <select id="selectByExample" parameterType="model.HorseOnSaleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from horseonsale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause} desc, id desc
    </if>
  </select>
  <select id="selectByRawSQL" parameterType="domain.SqlVo" resultMap="BaseResultMap">
    ${sql}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from horseonsale
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from horseonsale
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.HorseOnSaleExample">
    delete from horseonsale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.HorseOnSale">
    insert into horseonsale (id, username, time, 
      title, sex, horsetype, 
      address, color, speciality, 
      parents, description, picture, 
      age, height)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{time,jdbcType=DATE}, 
      #{title,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{horsetype,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, #{speciality,jdbcType=VARCHAR}, 
      #{parents,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{height,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="model.HorseOnSale" useGeneratedKeys="true" keyProperty="id">
  
    insert into horseonsale
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="horsetype != null">
        horsetype,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="color != null">
        color,
      </if>
      <if test="speciality != null">
        speciality,
      </if>
      <if test="parents != null">
        parents,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="height != null">
        height,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="horsetype != null">
        #{horsetype,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        #{speciality,jdbcType=VARCHAR},
      </if>
      <if test="parents != null">
        #{parents,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        #{height,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.HorseOnSaleExample" resultType="java.lang.Long">
    select count(*) from horseonsale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update horseonsale
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.horsetype != null">
        horsetype = #{record.horsetype,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.color != null">
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.speciality != null">
        speciality = #{record.speciality,jdbcType=VARCHAR},
      </if>
      <if test="record.parents != null">
        parents = #{record.parents,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.height != null">
        height = #{record.height,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update horseonsale
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=DATE},
      title = #{record.title,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      horsetype = #{record.horsetype,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      speciality = #{record.speciality,jdbcType=VARCHAR},
      parents = #{record.parents,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      height = #{record.height,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.HorseOnSale">
    update horseonsale
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=DATE},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="horsetype != null">
        horsetype = #{horsetype,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="color != null">
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="speciality != null">
        speciality = #{speciality,jdbcType=VARCHAR},
      </if>
      <if test="parents != null">
        parents = #{parents,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="height != null">
        height = #{height,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.HorseOnSale">
    update horseonsale
    set username = #{username,jdbcType=VARCHAR},
      time = #{time,jdbcType=DATE},
      title = #{title,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      horsetype = #{horsetype,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      speciality = #{speciality,jdbcType=VARCHAR},
      parents = #{parents,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      height = #{height,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>